An implementation of the ADSD hotel example.

You need to have RazorGenerator VS extension installed
You need to run VS as admin in order to have access to migrations cmdlets
Uses localdb by default
You'll need the dependencies for NServiceBus (MSMQ,RavenDB,DTC)
It'll send e-mails via localhost, I use papercut to intercept them

To think about:
- Obtain reservation details published by branding or reservation service
- Who owns urls
- If site owns urls, how to communicate with service (now done via events)

TODO:
Features:
* implement pricing service
* implement room details service
* manage room types
* show current occupancy
* in frontdesk filter on reservations which can actually be checked in
* force reservation checkout>checkin
* handle rooms not available exception when making reservation
* handle/implement timeouts on acquiring payment data
* handle rooms not available when checking in
* implement search by last name
* handle already checked in
* handle failed checkins
* no double checkin
* make checkin idempotent

Refactors:
* rename all to/till date fields to checkout date
* interpret denied reason in e-mails
* distinguish between services' webinterface per endpoint (frontdesk/customer)
* find way to inject javascript without wrapping div
* be able to run services' webinterface standalone
* create solutions for services
* directly write reservation info to db instead of session since roomreserver is now only concurrency point
* get rid of NSB abstractions and just use it directly
* give checkin process its own ID
* integrate IO ops via replies instead of commands 
* remove purge

Extra features:
* upgrade your room
* extend your stay
* switch credit card at checkin